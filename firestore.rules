rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isRider() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'rider';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        isAdmin() || 
        isRider()
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        isAdmin() || 
        (isRider() && request.resource.data.status == 'delivered' && resource.data.status == 'processing')
      );
      // Allow querying orders
      allow list: if isAuthenticated() && (isAdmin() || isRider());
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin() || request.auth.uid == userId;
      // Allow listing riders
      allow list: if isAdmin() && request.query.limit <= 100;
    }
    
    // Products collection
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Categories collection
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User Orders subcollection
    match /users/{userId}/orders/{orderId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Cart collection
    match /users/{userId}/cart/{cartId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}